security:
    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER ]

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            id: App\Security\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            access_denied_handler: App\Security\AccessDeniedHandler
            entry_point: App\Security\AccessDeniedHandler
            form_login:
                login_path: app_login
                check_path: app_login
                username_parameter: _username
                password_parameter: _password

            logout:
                path: app_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

        api_login:
            pattern: ^/api/login$
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    access_control:
        - { path: ^/diagnostic/.*user.*, roles: ROLE_USER }
        - { path: ^/.*user.*, roles: ROLE_USER }
        - { path: ^/.*admin.*, roles: ROLE_ADMIN }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/contenus, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
