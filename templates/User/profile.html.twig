{% extends 'base.html.twig' %}

{% block title %}{{ app.user.username ?: app.user.nom ~ ' ' ~ app.user.prenom }}{% endblock %}

{% block body %}
    {% include 'part/addFlash.html.twig' %}

<main class="main-content">
    <div class="p-1 mb-4" style="width: 50%">
    <div class="profile-picture">
        {% if app.user.photoProfile %}
            <img src="{{ asset('uploads/profiles/' ~ app.user.photoProfile) }}" alt="Photo de profil">
        {% else %}
            <img src="{{ asset('images/profilePicture1.png') }}" alt="Photo par défaut">
        {% endif %}
    </div>

    {{ form_start(form, {
        'attr': {
            'id': 'profileForm',
            'enctype': 'multipart/form-data'
        },
        'action': path('app_profile')
    }) }}

    <div class="profile-field">
        {{ form_label(form.nom) }}
        {{ form_widget(form.nom) }}
        {{ form_errors(form.nom) }}
    </div>

    <div class="profile-field">
        {{ form_label(form.prenom) }}
        {{ form_widget(form.prenom) }}
        {{ form_errors(form.prenom) }}
    </div>

    <div class="profile-field">
        {{ form_label(form.email) }}
        {{ form_widget(form.email) }}
        {{ form_errors(form.email) }}
    </div>

    <div class="profile-field">
        {{ form_label(form.dateNaissance) }}
        {{ form_widget(form.dateNaissance) }}
        {{ form_errors(form.dateNaissance) }}
    </div>

    <div class="profile-field">
        {{ form_label(form.username) }}
        {{ form_widget(form.username) }}
        {{ form_errors(form.username) }}
    </div>

    <div class="profile-field {% if form.photoProfile.vars.errors|length > 0 %}has-error{% endif %} hidden" id="phtotoProfileHidden">
        {{ form_label(form.photoProfile) }}
        {{ form_widget(form.photoProfile) }}
    </div>

    <div class="profile-buttons">
        <a class="button btn-fermer hidden">Annuler</a>
        <a type="button" id="editButton" class="button edit-btn">Modifier</a>
        <a href="{{ path('app_confirm_delete_user', {'id': utilisateur.id}) }}" class="button danger-btn" data-target="modal">Supprimer</a>
        <a class="button btn-reset-password hidden" href="{{ path('app_forgot_password_request') }}">Changer votre mot de passe</a>
        {{ form_widget(form.save, {'attr': {'class': 'button save-btn hidden'}}) }}
    </div>

    {{ form_end(form) }}
    </div>
</main>
{% endblock %}

{% block js %}
    {{ parent() }}
    <script>
        function initProfileModal() {
            let editButton = document.getElementById("editButton");
            let saveButton = document.querySelector(".save-btn");
            let annulerButton = document.querySelector(".btn-fermer");
            let resetPasswordBtn = document.querySelector(".btn-reset-password");
            let deleteButton = document.querySelector(".danger-btn");
            let inputs = document.querySelectorAll("#profileForm input");
            let inputChamps = document.querySelector('#phtotoProfileHidden');
            let errorMessages = document.querySelectorAll(".alert-danger");

            if (!editButton) {
                console.error("Le bouton Modifier n'existe pas !");
                return;
            }

            // Sauvegarde des valeurs initiales
            let initialValues = {};
            inputs.forEach(input => initialValues[input.id] = input.value);

            // Suppression des anciens événements pour éviter les doublons
            editButton.removeEventListener("click", enableEditing);
            annulerButton.removeEventListener("click", cancelEditing);
            resetPasswordBtn.removeEventListener("click", enableEditing);
            deleteButton.addEventListener("click", enableEditing);

            // Ajout des événements
            editButton.addEventListener("click", enableEditing);
            annulerButton.addEventListener("click", cancelEditing);
            resetPasswordBtn.addEventListener("click", cancelEditing);
            deleteButton.addEventListener("click", cancelEditing);

            function enableEditing() {
                inputs.forEach(input => input.removeAttribute("readonly"));
                editButton.classList.add("hidden");
                annulerButton.classList.remove("hidden");
                saveButton.classList.remove("hidden");
                inputChamps.classList.remove("hidden");
                resetPasswordBtn.classList.remove("hidden");
                deleteButton.classList.add("hidden");
            }

            function cancelEditing() {
                inputs.forEach(input => {
                    input.value = initialValues[input.id];
                    input.setAttribute("readonly", true);
                });

                editButton.classList.remove("hidden");
                annulerButton.classList.add("hidden");
                saveButton.classList.add("hidden");
                inputChamps.classList.add("hidden");
                resetPasswordBtn.classList.add("hidden");
                deleteButton.classList.remove("hidden");
            }

            // ✅ Afficher les boutons si une erreur existe déjà dans le formulaire
            if (errorMessages.length > 0) {
                console.warn("Des erreurs sont présentes, affichage des boutons !");
                editButton.classList.add("hidden");
                annulerButton.classList.remove("hidden");
                saveButton.classList.remove("hidden");
                inputChamps.classList.remove("hidden");
                deleteButton.classList.add("hidden");
            }
        }

        // Exécuter la fonction après le chargement du modal
        document.addEventListener("DOMContentLoaded", function() {
            setTimeout(initProfileModal, 500);
        });

        // Exécuter la fonction après chaque ouverture du modal
        document.addEventListener("modalContentLoaded", function() {
            initProfileModal();
        });
    </script>
{% endblock %}






