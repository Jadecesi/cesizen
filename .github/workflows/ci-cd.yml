name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch: # permet d√©clenchement manuel pour prod

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "sqlite:///:memory:" # utilis√© globalement pour √©viter les erreurs Doctrine

    steps:
      # 1Ô∏è‚É£ R√©cup√©ration du code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Cr√©ation du fichier .env avec les secrets
      - name: Create .env file
        run: |
          echo "APP_ENV=\"prod\"" >> .env
          echo "APP_SECRET=\"${{ secrets.APP_SECRET }}\"" >> .env
          echo "DATABASE_URL=\"sqlite:///:memory:\"" >> .env
          echo "MERCURE_JWT_SECRET=\"${{ secrets.MERCURE_JWT_SECRET }}\"" >> .env
          echo "MERCURE_URL=\"${{ secrets.MERCURE_URL }}\"" >> .env
          echo "MERCURE_PUBLIC_URL=\"${{ secrets.MERCURE_PUBLIC_URL }}\"" >> .env
          echo "CORS_ALLOW_ORIGIN=\"${{ secrets.CORS_ALLOW_ORIGIN }}\"" >> .env


      # 3Ô∏è‚É£ Configuration de PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # 4Ô∏è‚É£ Installation des d√©pendances sans scripts (pour √©viter l'erreur .env)
      - name: Install dependencies (no scripts)
        run: composer install --no-scripts --no-progress --no-interaction --prefer-dist

      # 5Ô∏è‚É£ Ex√©cution manuelle des scripts Symfony (ex. cache:clear)
      - name: Run Symfony scripts (cache:clear, etc.)
        run: composer run-script auto-scripts

      # 6Ô∏è‚É£ Lancer les tests unitaires avec SQLite
      - name: Run unit tests
        run: php bin/phpunit --testdox

      # 7Ô∏è‚É£ Analyse de code (lint)
      - name: Lint code
        run: composer lint || echo "Lint warnings"

      # 8Ô∏è‚É£ V√©rification de s√©curit√© avec Snyk
      - name: Security check with Snyk
        uses: snyk/actions@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # 9Ô∏è‚É£ D√©ploiement en recette (staging)
      - name: Deploy to staging
        if: success()
        run: echo "D√©ploiement automatique en environnement de recette..."

      # üîü D√©ploiement manuel en production
      - name: Deploy to production
        if: github.event_name == 'workflow_dispatch'
        run: echo "D√©ploiement manuel / Canary Release vers la production..."
